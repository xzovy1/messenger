// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @unique @default(uuid()) @db.Uuid
  username  String
  password  String
  profile   Profile[]
  sender    Message[] @relation("SentMessage")
  recipient Message[] @relation("RecievedMessage")
  chat      Chat?     @relation(fields: [chat_id], references: [id])
  chat_id   String?   @unique @db.Uuid
}

model Profile {
  id      String    @unique @default(uuid()) @db.Uuid
  user    User      @relation(fields: [user_id], references: [id])
  user_id String    @unique @db.Uuid
  name    String
  bio     String    @db.VarChar(256)
  dob     DateTime?
  image   String?
}

model Message {
  id           String   @unique @default(uuid()) @db.Uuid
  sender_id    String   @db.Uuid
  sender       User     @relation("SentMessage", fields: [sender_id], references: [id])
  recipient_id String   @db.Uuid
  recipient    User     @relation("RecievedMessage", fields: [recipient_id], references: [id])
  body         String
  read         Boolean @default(false)
  sent_at      DateTime @default(now())
  Chat         Chat?    @relation(fields: [chatId], references: [id])
  chatId       String?  @db.Uuid
}

model Chat {
  id      String    @unique @default(uuid()) @db.Uuid
  message Message[]
  user    User[]
}
