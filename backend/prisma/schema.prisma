// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String    @id @unique @default(uuid()) @db.Uuid
  username    String    @unique
  profile     Profile?
  sender      Message[] @relation("SentMessage")
  recipient   Message[] @relation("RecievedMessage")
  chats       Chat[]
  password    PW?        @relation(fields: [password_id], references: [id])
  password_id String?    @unique @default(uuid()) @db.Uuid
}

model PW {
  id       String @id @unique @default(uuid()) @db.Uuid
  hash String
  User     User[]
}

model Profile {
  id        String    @id @unique @default(uuid()) @db.Uuid
  user      User      @relation(fields: [user_id], references: [id])
  user_id   String    @unique @db.Uuid
  firstname String
  lastname  String
  bio       String?   @db.VarChar(256)
  dob       DateTime?
  image     String?
}

model Message {
  id           String   @unique @default(uuid()) @db.Uuid
  sender_id    String   @db.Uuid
  sender       User     @relation("SentMessage", fields: [sender_id], references: [id])
  recipient_id String   @db.Uuid
  recipient    User     @relation("RecievedMessage", fields: [recipient_id], references: [id])
  body         String
  read         Boolean  @default(false)
  sent_at      DateTime @default(now())
  chat         Chat?    @relation(fields: [chat_id], references: [id])
  chat_id      String?  @db.Uuid
}

model Chat {
  id      String    @id @unique @default(uuid()) @db.Uuid
  message Message[]
  users   User[]
}
